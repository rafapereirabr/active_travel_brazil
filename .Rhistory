tab1[, value := factor(value, levels=c("2013", "Women",  "Men"
, "18-24", "25-34", "35-44", "45-54", "55-64", "65+"
, "Uneducated + Incomplete\nprimary school", "Complete\nprimary school", "Complete\nhigh school", "University degree"
, "No", "Yes, part of the journey", "Yes, all the journey"))]
plot1a <-
ggplot(data=subset(tab1, var %in% c("Year", "Sex")) ) +
geom_point( aes(x=value, y=Proportion, color=quintileBR, fill=quintileBR), size=3, shape=21 ) +
geom_errorbar( aes(x=value, y=Proportion, ymin=ci_u, ymax=ci_l, color=quintileBR),  size=0.5, width = 0) +
facet_grid( .~var , scales = "free_x", space="free") +
baseplot +
scale_colour_grey( start = 0, end = 0.8, guide = guide_legend(title = NULL)) +
scale_fill_grey( start = 0, end = 0.8, guide = guide_legend(title = NULL)) +
# colored chart
# scale_colour_brewer(palette = "Greys") + scale_fill_brewer(palette = "Greys")
# scale_fill_viridis(discrete=T) +  scale_color_viridis(discrete=T)
# scale_fill_manual(values = wes_palette("Royal1"), guide = guide_legend(title = NULL)) +
# scale_color_manual(values = wes_palette("Royal1"), guide = guide_legend(title = NULL)) +
scale_y_continuous(labels = scales::percent) +
theme(axis.title.x  = element_blank()) +
theme(legend.position = "top")
plot1b <-
ggplot(data=subset(tab1, var %in% c("Age")) ) +
geom_point( aes(x=value, y=Proportion, color=quintileBR, fill=quintileBR), size=3, shape=21 ) +
geom_errorbar( aes(x=value, y=Proportion, ymin=ci_u, ymax=ci_l, color=quintileBR),  size=0.5, width = 0) +
facet_grid( .~var , scales = "free_x", space="free") +
baseplot +
scale_colour_grey( start = 0, end = 0.8, guide = guide_legend(title = NULL)) +
scale_fill_grey( start = 0, end = 0.8, guide = guide_legend(title = NULL)) +
scale_y_continuous(labels = scales::percent) +
theme(axis.title.x  = element_blank()) +
theme(legend.position = "top")
plot1c <-
ggplot(data=subset(tab1, var %in% c("Education")) ) +
geom_point( aes(x=value, y=Proportion, color=quintileBR, fill=quintileBR), size=3, shape=21 ) +
geom_errorbar( aes(x=value, y=Proportion, ymin=ci_u, ymax=ci_l, color=quintileBR),  size=0.5, width = 0) +
facet_grid( .~var , scales = "free_x", space="free") +
baseplot +
scale_colour_grey( start = 0, end = 0.8, guide = guide_legend(title = NULL)) +
scale_fill_grey( start = 0, end = 0.8, guide = guide_legend(title = NULL)) +
scale_y_continuous(labels = scales::percent) +
theme(axis.title.x  = element_blank()) +
theme(legend.position = "top") +
theme(legend.position="none")
plot1d <-
ggplot(data=subset(tab1, var %in% c("Active Commute")) ) +
geom_point( aes(x=value, y=Proportion, color=quintileBR, fill=quintileBR), size=3, shape=21 ) +
geom_errorbar( aes(x=value, y=Proportion, ymin=ci_u, ymax=ci_l, color=quintileBR),  size=0.5, width = 0) +
facet_grid( .~var , scales = "free_x", space="free") +
baseplot +
scale_colour_grey( start = 0, end = 0.8, guide = guide_legend(title = NULL)) +
scale_fill_grey( start = 0, end = 0.8, guide = guide_legend(title = NULL)) +
scale_y_continuous(labels = scales::percent) +
theme(axis.title.x  = element_blank()) +
theme(legend.position = "top")  +
theme(legend.position="none")
# Arrange sub-plots  adding two empty plots to increasing the space between plots
fig1 <- plot_grid(plot1a, plot1b, NULL,NULL, plot1c, plot1d,
labels=c('A', 'B','','','C',"D"),
nrow = 3, rel_heights = c(1, 0.1, 1))
# save plot
ggsave(fig1, file="./plots/fig1.png", dpi = 800,
width = 35, height = 20, units = "cm")
tab2_pns_total <- svyby(~ dummyVehicle=="Yes" ,
~quintileBR+year, svymean ,
design = pns13.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pns_urban <- svyby(~ dummyVehicle=="Yes" ,
~quintileBR+urban+year, svymean ,
design = pns13.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pns_region <- svyby(~ dummyVehicle=="Yes" ,
~quintileRegion+region+year, svymean ,
design = pns13.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pns_metro <- svyby(~ dummyVehicle=="Yes" ,
~quintileMetro+metro+year, svymean ,
design = pns13.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
# PNAD subtables
tab2_pnad_total <- svyby(~ dummyVehicle=="Yes" ,
~quintileBR+year, svymean ,
design = pnad08.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pnad_urban <- svyby(~ dummyVehicle=="Yes" ,
~quintileBR+urban+year, svymean ,
design = pnad08.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pnad_region <- svyby(~ dummyVehicle=="Yes" ,
~quintileRegion+region+year, svymean ,
design = pnad08.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pnad_metro <- svyby(~ dummyVehicle=="Yes" ,
~quintileMetro+metro+year, svymean ,
design = pnad08.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pns_total$var <- "Total"
tab2_pns_urban$var <- "Urban"
tab2_pns_region$var <- "Region"
tab2_pns_metro$var <- "Metropolitan Area"
tab2_pnad_total$var <- "Total"
tab2_pnad_urban$var <- "Urban"
tab2_pnad_region$var <- "Region"
tab2_pnad_metro$var <- "Metropolitan Area"
beep() # beep alert
tab2_pns_total
tab2_pns_region
tab2_pns_urban
tab2_pns_metro
tab2_pnad_total
tab2_pnad_urban
tab2_pnad_region
tab2_pnad_metro
pns2013 <- readRDS("./data/pns2013.Rds")
pnad2008 <- readRDS("./data/pnad2008.Rds")
pns2013dom <- readRDS("./data/pns2013dom.Rds")
pnad2008dom <- readRDS("./data/pnad2008dom.Rds")
# Keep only important variables
#pnad2008 <- select(pnad2008, v0101,uf,v0102,v0103,v0403,v4729,v4609, v4732,v8005,v0302,v0404,v4803,v4838,v4728,v4727,v0602,v9005,v4805,v4706,v4810,v4720,v4721,v4721,v4745,v9054,v9055,v9056,v9057,v1409,v14091,v1410,v1411, v4602, v4618, v4617, upa, region, AGE,agegroup, urban, metro, DecileBR,Vcount, v1410mod,v1411mod,v9057mod,actv_commutetime30,pre_wgt)
pns2013 <- select(pns2013,
V0031,   # pnad compat_ metropolitan area
V0026,   # pnad compat_ urban
v4745,   # pnad compat_ Educational attainment
v0302,   # pnad compat_ Sex
v4727,   # pnad compat_ Metropolitan area
v1410,   # pnad compat_ Active Travel
v2032,   # pnad compat_ Car or motorcycle ownership
v4721,   # pnad Household income per capita
V0015,   # type of interview
V0001,   # state
C006,    # sex
C009,    # race
C008,    # age
VDD004,  # Educational attainment
P040,    # Active commute
P04101,  # Active commute time (hours)
P04102,  # Active commute time (minutes)
P04301, # active travel to habitual activities
P04302, # active travel time to habitual activities
P00101, # Weight
P00401, # Height
N001, # health perception
O009, # car accident
O011, # travel mode when injured
O014, # accident hindered habitual activities
O020, # any sequel and / or disability due to this traffic accident
Q002, # Ever diagnosed with hypertension
Q003, # age at diagnosis for hypertension
Q030, # Ever diagnosed with diabetes
Q031, # age at diagnosis for diabetes
Q060, # Ever diagnosed with high cholesterol
Q061,  # age at diagnosis for high cholesterol
V0025,   # person selected for long questionaire
M001,    # Type of interview
UPA_PNS, # UPA
V0024,   # Strata
V0029,   # person sample weight without calibratio
V00291,  # person sample weight with calibration
V00292,  # Population projection
V00283,  # Dominio de pos-estrato 1
V00293,  # Dominio de pos-estrato 2
A01817,  # Motorcycle ownership
A020,    # Car ownership (number of cars)
v2032,   # Vehicle in the household, compatible with PNAD
dummyVehicle,
v1410, # dummy active travel , compatible with PNAD
year, region,
AGE, agegroup, edugroup, urban, metro, vcount,
actv_commutetime30, actv_commutetime,actv_traveltimehabacts,total_actvtraveltime, physicallyactive30 # commute variables
)
anyNA(pns2013$V00291)
length(which(is.na(pns2013$V00291)))
# Subset PNS with individuals who answered the detailed questionnaire only
# This eliminates observations with missing values in the weight variable
#PNS2013pesDet <- PNS2013pes[!(is.na(PNS2013pes$V0029))]
pns2013Det <- pns2013[M001==1, ]
#define como imputar variancia quando houver apenas um domicilio (PSU) no estrato
# set R to produce conservative standard errors instead of crashing - http://r-survey.r-forge.r-project.org/survey/exmample-lonely.html
options( survey.lonely.psu = "adjust" )  # ??survey.lonely.psu
#Cria objeto de desenho da amostra
sample.pns13 <- svydesign(data = pns2013Det,
id = ~UPA_PNS, #PSU
strata = ~V0024, #Strat
weights=~V0029, #PesoPessoa: usar peso original
nest = TRUE
)
post_pop <- unique( subset(pns2013Det, select= c(V00293,V00292) ))
names(post_pop)<-c("V00293","Freq")
sample.pns13.pos <- postStratify(sample.pns13, ~V00293, post_pop)
#Subset design population above 18 years old
pns13.18y.design <- subset(sample.pns13.pos, C008>17)
table(pns2013$quintileBR)
table(pns2013$decileBR)
decilebr <- svyquantile(~v4721, design = sample.pns13.pos, quantiles = seq(0, 1, by=0.1), method = "linear", ties="rounded", na.rm=T)
pns2013[ , decileBR :=  cut( v4721 , decilebr, include.lowest= TRUE, labels=1:10, na.rm=T ) ]
table(pns2013$decileBR)
quintilebr <- svyquantile(~v4721, design = sample.pns13.pos, quantiles = seq(0, 1, by=0.2), method = "linear", ties="rounded", na.rm=T)
pns2013[ , quintileBR :=  cut( v4721 , quintilebr, include.lowest= TRUE, labels=1:5, na.rm=T ) ]
table(pns2013$quintileBR)
quintiles_metro <- svyby(~v4721, ~metro, design = sample.pns13.pos, svyquantile, quantiles = seq(0, 1 , by=0.2), method = "linear", ties="rounded", na.rm=T, ci=T)
quintiles_metro <- data.table(quintiles_metro)
for (i in c(quintiles_metro$metro) ) {
quintile <- as.vector( quintiles_metro[metro== i , c(2:7)] )
pns2013[ metro== i, quintileMetro :=  as.numeric(cut( v4721 , quintile, include.lowest= TRUE, labels=1:5, na.rm=T )) ]
}
table(pns2013$quintileMetro, pns2013$metro)
quintiles_region <- svyby(~v4721, ~region, design = sample.pns13.pos, svyquantile, quantiles = seq(0, 1 , by=0.2), method = "linear", ties="rounded", na.rm=T, ci=T)
quintiles_region <- data.table(quintiles_region)
for (i in c(quintiles_region$region) ) {
quintile <- as.vector( quintiles_region[region== i , c(2:7)] )
pns2013[ region== i, quintileRegion :=  as.numeric(cut( v4721 , quintile, include.lowest= TRUE, labels=1:5, na.rm=T )) ]
}
table(pns2013$quintileRegion, pns2013$region)
beep()
pns2013Det <- pns2013[M001==1, ]
options( survey.lonely.psu = "adjust" )  # ??survey.lonely.psu
sample.pns13 <- svydesign(data = pns2013Det,
id = ~UPA_PNS, #PSU
strata = ~V0024, #Strat
weights=~V0029, #PesoPessoa: usar peso original
nest = TRUE)
## post-estratification of sample design
post_pop <- unique( subset(pns2013Det, select= c(V00293,V00292) ))
names(post_pop)<-c("V00293","Freq")
sample.pns13.pos <- postStratify(sample.pns13, ~V00293, post_pop)
pns13.18y.design <- subset(sample.pns13.pos, C008>17)
table(pns2013$quintileRegion, pns2013$region)
table(pns2013$quintileMetro, pns2013$metro)
tab2_pns_region <- svyby(~ dummyVehicle=="Yes" ,
~quintileRegion+region+year, svymean ,
design = pns13.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pns_metro <- svyby(~ dummyVehicle=="Yes" ,
~quintileMetro+metro+year, svymean ,
design = pns13.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
beep()
tab2_pns_region
tab2_pns_metro
pns2013Det <- pns2013[M001==1, ]
options( survey.lonely.psu = "adjust" )  # ??survey.lonely.psu
sample.pns13 <- svydesign(data = pns2013Det,
id = ~UPA_PNS, #PSU
strata = ~V0024, #Strat
weights=~V0029, #PesoPessoa: usar peso original
nest = TRUE)
## post-estratification of sample design
post_pop <- unique( subset(pns2013Det, select= c(V00293,V00292) ))
names(post_pop)<-c("V00293","Freq")
sample.pns13.pos <- postStratify(sample.pns13, ~V00293, post_pop)
pns13.18y.design <- subset(sample.pns13.pos, C008>17)
save( pns13.18y.design , file = './data/pns13.18y.design.rda' )
rm(pns13.18y.design)
rm(tab2_pns_region, tab2_pns_metro)
load('./data/pns13.18y.design.rda')
tab2_pns_region <- svyby(~ dummyVehicle=="Yes" ,
~quintileRegion+region+year, svymean ,
design = pns13.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
pnad2008 <- readRDS("./data/pnad2008.Rds")
############## 4. PNAD Create survey design  -----------
#define como imputar variancia quando houver apenas um domicilio (PSU) no estrato
options( survey.lonely.psu = "adjust" )  # ??survey.lonely.psu
#Cria objeto de desenho da amostra
sample.pnad08 <- svydesign(
data = pnad2008,
id = ~v4618, #PSU
strata = ~v4617, #Strat
weights = ~pre_wgt, #person weight v4729
nest = TRUE
)
# postStratify pnad2008 (Djalma suggestion)
post.pop <- unique(data.frame(v4609=as.character(pnad2008$v4609), Freq= as.numeric(pnad2008$v4609)))
sample.pos <- postStratify(design=sample.pnad08, strata=~v4609, population=post.pop)
# Subset Survey design of people above 18 years old in order to make PNAD
# compatible with PNS, in which only people above 18 answer the detailed quest
pnad08.18y.design <- subset(sample.pos, v8005>=17)
############## PNAD Income quantiles  -----------
# DECILE BR: Calculate decile intervals considering Sample Design
decilebr <- svyquantile(~v4721, design = sample.pos, quantiles = seq(0, 1, by=0.1), method = "linear", ties="rounded", na.rm=T)
# Categorize individuals according to their decile position
pnad2008[ , decileBR :=  cut( v4721 , decilebr, include.lowest= TRUE, labels=1:10, na.rm=T ) ]
table(pnad2008$decileBR)
# Quintile BR: Calculate decile intervals considering Sample Design
quintilebr <- svyquantile(~v4721, design = sample.pos, quantiles = seq(0, 1, by=0.2), method = "linear", ties="rounded", na.rm=T)
# Categorize individuals according to their quintile position
pnad2008[ , quintileBR :=  cut( v4721 , quintilebr, include.lowest= TRUE, labels=1:5, na.rm=T ) ]
table(pns2013$quintileBR)
# Quntile metro: Calculate Quntile intervals considering Sample Design
quintiles_metro <- svyby(~v4721, ~metro, design = sample.pos, svyquantile, quantiles = seq(0, 1 , by=0.2), method = "linear", ties="rounded", na.rm=T, ci=T)
quintiles_metro <- data.table(quintiles_metro)
# Categorize individuals according to their quintile position
for (i in c(quintiles_metro$metro) ) {
quintile <- as.vector( quintiles_metro[metro== i , c(2:7)] )
pnad2008[ metro== i, quintileMetro :=  as.numeric(cut( v4721 , quintile, include.lowest= TRUE, labels=1:5, na.rm=T )) ]
}
table(pnad2008$quintileMetro, pnad2008$metro)
# Quintile Region: Calculate Quntile intervals considering Sample Design
quintiles_region <- svyby(~v4721, ~region, design = sample.pos, svyquantile, quantiles = seq(0, 1 , by=0.2), method = "linear", ties="rounded", na.rm=T, ci=T)
quintiles_region <- data.table(quintiles_region)
# Categorize individuals according to their quintile position
for (i in c(quintiles_region$region) ) {
quintile <- as.vector( quintiles_region[region== i , c(2:7)] )
pnad2008[ region== i, quintileRegion :=  as.numeric(cut( v4721 , quintile, include.lowest= TRUE, labels=1:5, na.rm=T )) ]
}
table(pnad2008$quintileRegion, pnad2008$region)
beep()
table(pnad2008$quintileRegion, pnad2008$region)
table(pnad2008$quintileMetro, pnad2008$metro)
############## 6. UPDATE PNAD survey design  -----------
options( survey.lonely.psu = "adjust" )  # ??survey.lonely.psu
sample.pnad08 <- svydesign(
data = pnad2008,
id = ~v4618, #PSU
strata = ~v4617, #Strat
weights = ~pre_wgt, #person weight v4729
nest = TRUE )
# postStratify pnad2008 (Djalma suggestion)
post.pop <- unique(data.frame(v4609=as.character(pnad2008$v4609), Freq= as.numeric(pnad2008$v4609)))
sample.pos <- postStratify(design=sample.pnad08, strata=~v4609, population=post.pop)
pnad08.18y.design <- subset(sample.pos, v8005>=17)
tab2_pnad_region <- svyby(~ dummyVehicle=="Yes" ,
~quintileRegion+region+year, svymean ,
design = pnad08.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
save( pnad08.18y.design , file = './data/pnad08.18y.design.rda' )
rm(pnad08.18y.design)
tab2_pnad_region <- svyby(~ dummyVehicle=="Yes" ,
~quintileRegion+region+year, svymean ,
design = pnad08.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
load('./data/pnad08.18y.design.rda')
tab2_pnad_region <- svyby(~ dummyVehicle=="Yes" ,
~quintileRegion+region+year, svymean ,
design = pnad08.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
baseplot <- theme_minimal() +
theme(
axis.text  = element_text(face="bold"),
strip.text = element_text(size = 11, face ="bold"),
legend.text = element_text(size = 11)
)
load('./data/pnad08.18y.design.rda')
load('./data/pns13.18y.design.rda')
tab2_pns_total <- svyby(~ dummyVehicle=="Yes" ,
~quintileBR+year, svymean ,
design = pns13.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pns_urban <- svyby(~ dummyVehicle=="Yes" ,
~quintileBR+urban+year, svymean ,
design = pns13.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pns_region <- svyby(~ dummyVehicle=="Yes" ,
~quintileRegion+region+year, svymean ,
design = pns13.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pns_region <- svyby(~ dummyVehicle=="Yes" ,
~quintileRegion+region+year, svymean ,
design = pns13.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pns_metro
tab2_pns_region
tab2_pns_region <- svyby(~ dummyVehicle=="Yes" ,
~quintileRegion+region+year, svymean ,
design = pns13.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pns_region
tab2_pns_metro <- svyby(~ dummyVehicle=="Yes" ,
~quintileMetro+metro+year, svymean ,
design = pns13.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pns_metro
tab2_pnad_region <- svyby(~ dummyVehicle=="Yes" ,
~quintileRegion+region+year, svymean ,
design = pnad08.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
############ Load Survey Design Objects ############
load('./data/pnad08.18y.design.rda')
load('./data/pns13.18y.design.rda')
######################!!!!!! RESULTS   RESULTS  RESULTS ######################
######################!!!!!! RESULTS   RESULTS  RESULTS ######################
######################!!!!!! RESULTS   RESULTS  RESULTS ######################
# Create Basic Aesthetic stantard for the plots
baseplot <- theme_minimal() +
theme(
axis.text  = element_text(face="bold"),
strip.text = element_text(size = 11, face ="bold"),
legend.text = element_text(size = 11)
)
tab2_pns_total <- svyby(~ dummyVehicle=="Yes" ,
~quintileBR+year, svymean ,
design = pns13.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pns_urban <- svyby(~ dummyVehicle=="Yes" ,
~quintileBR+urban+year, svymean ,
design = pns13.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pns_region <- svyby(~ dummyVehicle=="Yes" ,
~quintileRegion+region+year, svymean ,
design = pns13.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pns_metro <- svyby(~ dummyVehicle=="Yes" ,
~quintileMetro+metro+year, svymean ,
design = pns13.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
# PNAD subtables
tab2_pnad_total <- svyby(~ dummyVehicle=="Yes" ,
~quintileBR+year, svymean ,
design = pnad08.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pnad_urban <- svyby(~ dummyVehicle=="Yes" ,
~quintileBR+urban+year, svymean ,
design = pnad08.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pnad_region <- svyby(~ dummyVehicle=="Yes" ,
~quintileRegion+region+year, svymean ,
design = pnad08.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pnad_metro <- svyby(~ dummyVehicle=="Yes" ,
~quintileMetro+metro+year, svymean ,
design = pnad08.18y.design ,
vartype="ci", level = 0.95, na.rm=T) %>% setDT()
tab2_pns_total$var <- "Total"
tab2_pns_urban$var <- "Urban"
tab2_pns_region$var <- "Region"
tab2_pns_metro$var <- "Metropolitan Area"
tab2_pnad_total$var <- "Total"
tab2_pnad_urban$var <- "Urban"
tab2_pnad_region$var <- "Region"
tab2_pnad_metro$var <- "Metropolitan Area"
beep() # beep alert
tab2_total <- rbind(tab2_pns_total, tab2_pnad_total)
tab2_total <- tab2_total[, c(1,2,4,6,8,9), with=FALSE]
colnames(tab2_total) <- c("quintileBR", "year", "Proportion", "ci_l", "ci_u" , "var")
tab2_total$value <- "Brazil"
setcolorder(tab2_total, neworder = c("quintileBR", "value", "year", "Proportion", "ci_l", "ci_u", "var") )
tab2_list <- list(tab2_pns_urban, tab2_pns_region, tab2_pns_metro, tab2_pnad_urban, tab2_pnad_region, tab2_pnad_metro)
tab2_list <- lapply(tab2_list, function(x) { x <- x[, c(1,2,3,5,7,9,10), with=FALSE] } )
tab2_list <- lapply(tab2_list, setNames, c("quintileBR", "value", "year","Proportion", "ci_l", "ci_u", "var"))
tab2 <- rbindlist(tab2_list)
tab2 <- rbind(tab2, tab2_total)
tab2[, quintileBR := factor(quintileBR, levels=c(1:5), labels = c("Q1 (poorest)","Q2","Q3","Q4","Q5 (richest)"))]
write_csv(tab2, path="./output_tables/tab2.csv")
tab2 <- fread("./output_tables/tab2.csv")
# edit text breaks for plot
tab2[ value== "Non-metropolitan area", value := "Non-metropolitan\narea"]
tab2[ value== "Belo Horizonte", value := "Belo\nHorizonte"]
tab2[ value== "Porto Alegre", value := "Porto\nAlegre"]
tab2[ value== "Federal District", value := "Federal\nDistrict"]
tab2[ value== "Rio de Janeiro", value := "Rio\nde Janeiro"]
tab2[ value== "Sao Paulo", value := "Sao\nPaulo"]
tab2$value <- reorder(tab2$value, tab2$Proportion) # reorder factor levels by poportion values
tab2[, var := factor(var, levels=c( "Total", "Urban", "Region", "Metropolitan Area"))]
tab2[, year := factor(year, levels=c( 2008, 2013))]
plot2a <-
ggplot(data=subset(tab2, var %in% c("Total", "Urban")) ) +
geom_point( aes(x=as.factor(year), y=Proportion, color=quintileBR, fill=quintileBR), size=3, shape=21 ) +
geom_errorbar( aes(x=as.factor(year), y=Proportion, ymin=ci_u, ymax=ci_l, color=quintileBR),  size=0.5, width = 0) +
facet_grid( .~var+value , scales = "free_x", space="free", labeller = label_bquote(cols = .(value) ))  +
baseplot +
scale_colour_grey( start = 0, end = 0.8, guide = guide_legend(title = NULL)) +
scale_fill_grey( start = 0, end = 0.8, guide = guide_legend(title = NULL)) +
# colored chart
# scale_colour_brewer(palette = "Greys") + scale_fill_brewer(palette = "Greys")
# scale_fill_viridis(discrete=T) +  scale_color_viridis(discrete=T)
# scale_fill_manual(values = wes_palette("Royal1"), guide = guide_legend(title = NULL)) +
# scale_color_manual(values = wes_palette("Royal1"), guide = guide_legend(title = NULL)) +
scale_y_continuous(labels = scales::percent, limits=c(0,1)) +
theme(axis.title.x  = element_blank()) +
theme(legend.position = "top") +
theme(plot.margin = unit(c(1,1,2,1), "cm"))
plot2b <-
ggplot(data=subset(tab2, var %in% c("Region")) ) +
geom_point( aes(x=as.factor(year), y=Proportion, color=quintileBR, fill=quintileBR), size=3, shape=21 ) +
geom_errorbar( aes(x=as.factor(year), y=Proportion, ymin=ci_u, ymax=ci_l, color=quintileBR),  size=0.5, width = 0) +
facet_grid( .~var+value , scales = "free_y", space="free", labeller = label_bquote(cols = .(value) ))  +
baseplot +
scale_colour_grey( start = 0, end = 0.8, guide = guide_legend(title = NULL)) +
scale_fill_grey( start = 0, end = 0.8, guide = guide_legend(title = NULL)) +
scale_y_continuous(labels = scales::percent, limits=c(0,1)) +
theme(axis.title.x  = element_blank()) +
theme(legend.position = "top") +
theme(plot.margin = unit(c(1,1,2,1), "cm"))
plot2c <-
ggplot(data=subset(tab2, var %in% c("Metropolitan Area")) ) +
geom_point( aes(x=as.factor(year), y=Proportion, color=quintileBR, fill=quintileBR), size=3, shape=21 ) +
geom_errorbar( aes(x=as.factor(year), y=Proportion, ymin=ci_u, ymax=ci_l, color=quintileBR),  size=0.5, width = 0) +
facet_grid( .~var+value , scales = "free_y", space="free", labeller = label_bquote(cols = .(value) ))  +
baseplot +
scale_colour_grey( start = 0, end = 0.8, guide = guide_legend(title = NULL)) +
scale_fill_grey( start = 0, end = 0.8, guide = guide_legend(title = NULL)) +
scale_y_continuous(labels = scales::percent, limits=c(0,1)) +
theme(axis.title.x  = element_blank()) +
theme(legend.position = "top") +
theme(plot.margin = unit(c(1,1,2,1), "cm")) +
theme(legend.position="none")
plot2a <- ggdraw(plot2a) +
draw_plot_label("A", size = 14) +
draw_label("Country",  x = 0.5, y = .075,
size = 14, fontface = 'bold')
plot2b <- ggdraw(plot2b) +
draw_plot_label("B", size = 14) +
draw_label("Region",  x = 0.5, y = .075,
size = 14, fontface = 'bold')
plot2c <- ggdraw(plot2c) +
draw_plot_label("C", size = 14) +
draw_label("Metropolitan Area",  x = 0.5, y = .075,
size = 14, fontface = 'bold')
# Arrange sub-plots
fig2 <- plot_grid(arrangeGrob(plot2a, plot2b, ncol = 2), plot2c, ncol = 1)
# save plot
ggsave(fig2, file="./plots/fig2.png", dpi = 800,
width = 42, height = 22, units = "cm")
