pnad2008 <- readRDS("./data/pnad2008.Rds")
library(ggplot2)
df <- as.data.frame(x=5,y=10)
ggplot(df, aes(x, y)) +
geom_point() +
stat_ellipse()
df
View(df)
df <- as.data.frame(x=c(5),y=c(10))
View(df)
df <- data.frame(x=c(5),y=c(10))
View(df)
ggplot(df, aes(x, y)) +
geom_point() +
stat_ellipse()
ggplot(df, aes(x, y)) +
geom_point()
ggplot(df, aes(x, y)) +
geom_point() +
stat_ellipse()
ggplot(df, aes(x, y)) +
geom_point(size=50, shape=1)
ggplot() +  geom_polygon(data=world, aes(x=long, y=lat, group=group))
all_states <- map_data("world")
ggplot() +  geom_polygon(data=all_states, aes(x=long, y=lat, group=group))
ggplot() +  geom_polygon(data=map_data("world"), aes(x=long, y=lat, group=group))
ggplot() +
geom_polygon(data=map_data("world"), aes(x=long, y=lat, group=group)) +
geom_point(data=yourtable, aes(long, lat), size=50, shape=1) +
coord_equal()
ggplot() +
geom_polygon(data=map_data("world"), aes(x=long, y=lat, group=group)) +
#geom_point(data=yourtable, aes(long, lat), size=50, shape=1) +
coord_equal()
ggplot() +
geom_polygon(data=map_data("sweden"), aes(x=long, y=lat, group=group))
ggplot() +
geom_polygon(data=map_data("Sweden"), aes(x=long, y=lat, group=group))
ggplot() +
geom_polygon(data=map_data("country"), aes(x=long, y=lat, group=group))
?fwrite
??fwrite
install.packages(c("colorspace", "maptools", "Rcpp", "rgdal"))
set.seed(1)
library(data.table)
set.seed(1)
DT = as.data.table(lapply(1:10, sample, x=as.numeric(1:5e7), size=5e6))  #  382MB
system.time(fwrite(DT, "tmp1.csv"))                             #  0.8s
remove.packages("microdadosBrasil")
library(devtools)
install_github("lucasmation/microdadosBrasil", ref = "subset-variables")
library(microdadosBrasil)
setwd("C:/Users/rafa/Downloads/mation")
mycolsDOM <- c("V0101", # year
"UF",    # State
"V0102", # NÃƒÂºmero de controle
"V0103", # NÃƒÂºmero de serie
"V0403", # Family number
"V4729", # Person Weight
"V4732", # Family Weight
"V4105", # Urban Vs Rural
"V2032", # Car or motorcycle ownership
"V4602", # Strata
"V4617", # STRAT
"V4609", # Population Projection
"UPA",   # DelimitaÃƒÂ§ÃƒÂ£o do municÃƒ­pio
"V4618", # PSU - Unidade primÃƒÂ¡ria de amostragem
"V4619", # Fator de subamostragem
"V4610", # InVerso da fraÃƒÂ§ÃƒÂ£o
"V4611", # Household weight
"V0233", # Household registered in 'saude da familia' program
"V0234") # time since registration
dom <-  read_PNAD("domicilios", 2008, vars_subset = mycolsDOM)
load("./data/PNAD2008/dicPNAD2008.RData")
# conVert to data.table
setDT(dicpes2008)
setDT(dicdom2008)
# Indicate which columns will be read
# indiViduals data
mycolsPES <- c( "V0101", # year
"UF",    # State
"V0102", # Numero de controle
"V0103", # Numero de serie
"V0403", # Family number
"V4729", # Person Weight
"V4732", # Family Weight
"V8005", # age
"V0302", # Sex
"V0404", # race
"V4803", # Years of schooling
"V4745", # Educational attainment
"V4727", # Metropolitan area
"V9005", # Number of jobs
"V4805", # Employment Status
"V4706", # Job position
"V4810", # Job sectos
"V4721", # Household Income per Capita
"v4721", # Family Income per Capita
"V9054", # Work location
"V9055", # Work at home
"V9056", # Directo commute from home to work
"V9057", # Commute time
"V1409", # walking difficulties due to health condition
"V14091",# shoping difficulties due to health condition
"V1410", # ActiVe commute
"V1411", # ActiVe commute time
"V2801") # Smoker
# household data
mycolsDOM <- c("V0101", # year
"UF",    # State
"V0102", # NÃƒÂºmero de controle
"V0103", # NÃƒÂºmero de serie
"V0403", # Family number
"V4729", # Person Weight
"V4732", # Family Weight
"V4105", # Urban Vs Rural
"V2032", # Car or motorcycle ownership
"V4602", # Strata
"V4617", # STRAT
"V4609", # Population Projection
"UPA",   # DelimitaÃƒÂ§ÃƒÂ£o do municÃƒ­pio
"V4618", # PSU - Unidade primÃƒÂ¡ria de amostragem
"V4619", # Fator de subamostragem
"V4610", # InVerso da fraÃƒÂ§ÃƒÂ£o
"V4611", # Household weight
"V0233", # Household registered in 'saude da familia' program
"V0234") # time since registration
# Filter selected Variables
dicpes2008 <- dicpes2008[cod %in% mycolsPES, ]
dicdom2008 <- dicdom2008[cod %in% mycolsDOM, ]
dom <-  read_PNAD("domicilios", 2008, vars_subset = mycolsDOM)
pes <-  read_PNAD("pessoas", 2008, vars_subset = mycolsPES)
mation <- left_join(pes, dom)
library(dplyr)
mation <- left_join(pes, dom)
sum(is.na(dom$V4618))
sum(is.na(mation$V4618))
# create end position of Variables
dicdom2008$fim <- dicdom2008$inicio + dicdom2008$tamanho -1
head(dicdom2008)
tail(dicdom2008)
# Read the data file .txt file
datafile <- "./data/PNAD2008/DOM2008.txt"
datafile <- "./data/PNAD2008/DOM2008.txt"
pnad2008dom <- read_fwf(datafile,
fwf_positions(start=dicdom2008$inicio,
end=dicdom2008$fim,
col_names = dicdom2008$cod),
col_types = cols( .default = col_character())
)
library(data.table)
library(readr)
pnad2008dom <- read_fwf(datafile,
fwf_positions(start=dicdom2008$inicio,
end=dicdom2008$fim,
col_names = dicdom2008$cod),
col_types = cols( .default = col_character())
)
source("./R-scripts/0 LoadPackages.R")
setwd("C:/Users/rafa/Downloads/active_travel_brazil")
load("./data/PNAD2008/dicPNAD2008.RData")
setDT(dicpes2008)
setDT(dicdom2008)
# Indicate which columns will be read
# indiViduals data
mycolsPES <- c( "V0101", # year
"UF",    # State
"V0102", # Numero de controle
"V0103", # Numero de serie
"V0403", # Family number
"V4729", # Person Weight
"V4732", # Family Weight
"V8005", # age
"V0302", # Sex
"V0404", # race
"V4803", # Years of schooling
"V4745", # Educational attainment
"V4727", # Metropolitan area
"V9005", # Number of jobs
"V4805", # Employment Status
"V4706", # Job position
"V4810", # Job sectos
"V4721", # Household Income per Capita
"v4721", # Family Income per Capita
"V9054", # Work location
"V9055", # Work at home
"V9056", # Directo commute from home to work
"V9057", # Commute time
"V1409", # walking difficulties due to health condition
"V14091",# shoping difficulties due to health condition
"V1410", # ActiVe commute
"V1411", # ActiVe commute time
"V2801") # Smoker
# household data
mycolsDOM <- c("V0101", # year
"UF",    # State
"V0102", # NÃƒÂºmero de controle
"V0103", # NÃƒÂºmero de serie
"V0403", # Family number
"V4729", # Person Weight
"V4732", # Family Weight
"V4105", # Urban Vs Rural
"V2032", # Car or motorcycle ownership
"V4602", # Strata
"V4617", # STRAT
"V4609", # Population Projection
"UPA",   # DelimitaÃƒÂ§ÃƒÂ£o do municÃƒ­pio
"V4618", # PSU - Unidade primÃƒÂ¡ria de amostragem
"V4619", # Fator de subamostragem
"V4610", # InVerso da fraÃƒÂ§ÃƒÂ£o
"V4611", # Household weight
"V0233", # Household registered in 'saude da familia' program
"V0234") # time since registration
# Filter selected Variables
dicpes2008 <- dicpes2008[cod %in% mycolsPES, ]
dicdom2008 <- dicdom2008[cod %in% mycolsDOM, ]
dicdom2008$fim <- dicdom2008$inicio + dicdom2008$tamanho -1
head(dicdom2008)
tail(dicdom2008)
# Read the data file .txt file
datafile <- "./data/PNAD2008/DOM2008.txt"
pnad2008dom <- read_fwf(datafile,
fwf_positions(start=dicdom2008$inicio,
end=dicdom2008$fim,
col_names = dicdom2008$cod),
col_types = cols( .default = col_character())
)
sapply(pnad2008dom, class)
colnames(pnad2008dom) <- tolower(colnames(pnad2008dom))
dicpes2008$fim <- dicpes2008$inicio + dicpes2008$tamanho -1
head(dicpes2008)
tail(dicpes2008)
datafile <- "./data/PNAD2008/PES2008.TXT"
datafile <- "./data/PNAD2008/PES2008.TXT"
pnad2008pes <- read_fwf(datafile,
fwf_positions(start=dicpes2008$inicio,
end=dicpes2008$fim,
col_names = dicpes2008$cod),
col_types = cols( .default = col_character())
)
colnames(pnad2008pes) <- tolower(colnames(pnad2008pes))
pnad2008 <- left_join(pnad2008pes, pnad2008dom)
mation <- left_join(pes, dom)
sum(is.na(pnad2008dom$V4618))
sum(is.na(pnad2008$V4618))
is.na(pnad2008$V4618)
pnad2008$V4618 <- as.numeric(pnad2008$V4618)
sum(is.na(pnad2008dom$v4618))
sum(is.na(pnad2008$v4618))
mycolsDOM
names(pnad2008dom)
names(dom)
mycolsDOM
head(dom)
tail(dom)
head(pnad2008dom)
tail(pnad2008dom)
tail(dom)
sum(is.na(dom$V4618))
sum(is.na(mation$V4618))
pnad2008 <- left_join(pes, dom)
colnames(pnad2008) <- tolower(colnames(pnad2008))
colnames(pnad2008)
pnad2008
setDT(pnad2008)[, year := 2008]
pnad2008[, vcount := 1]
table(pnad2008$vcount)
# Create Great Geographical Regions [data.table]
pnad2008[uf < 20, region :="North"]
pnad2008[uf > 19 & uf < 30, region :="Northeast"]
pnad2008[uf > 29 & uf < 40, region :="Southwest"]
pnad2008[uf > 39 & uf < 50, region :="South"]
pnad2008[uf > 49 & uf < 60, region :="Midwest"]
table(pnad2008$region)
# Create age groups with bigger age interval
pnad2008[v8005>=0 & v8005<18, AGE :="0-17"]
pnad2008[v8005>17 & v8005<25, AGE :="18-24"]
pnad2008[v8005>24 & v8005<35, AGE :="25-34"]
pnad2008[v8005>34 & v8005<45, AGE :="35-44"]
pnad2008[v8005>44 & v8005<55, AGE :="45-54"]
pnad2008[v8005>54 & v8005<65, AGE :="55-64"]
pnad2008[v8005>64,  AGE :="65+"]
table(pnad2008$AGE)
# Create  age groups with 5y intervals
pnad2008[ v8005<5, agegroup := "0-4"]
pnad2008[ v8005>4 & v8005<14, agegroup := "5-13"]
pnad2008[v8005>13 & v8005<18, agegroup := "14-17"]
pnad2008[v8005>17 & v8005<25, agegroup := "18-24"]
pnad2008[v8005>24 & v8005<30, agegroup := "25-29"]
pnad2008[v8005>29 & v8005<35, agegroup := "30-34"]
pnad2008[v8005>34 & v8005<40, agegroup := "35-39"]
pnad2008[v8005>39 & v8005<45, agegroup := "40-44"]
pnad2008[v8005>44 & v8005<50, agegroup := "45-49"]
pnad2008[v8005>49 & v8005<55, agegroup := "50-54"]
pnad2008[v8005>54 & v8005<60, agegroup := "55-59"]
pnad2008[v8005>59 & v8005<65, agegroup := "60-64"]
pnad2008[v8005>64, agegroup := "65+"]
table(pnad2008$agegroup)
# Recode Urban vs Rural variable
pnad2008[v4105<4, urban := "Urban"]
pnad2008[v4105>3 & v4105<9, urban := "Rural"]
table(pnad2008$urban)
# Recode Sex variable, make it compatible with PNAD
pnad2008[, v0302 := as.character(v0302)]
pnad2008[v0302==2, v0302 := "Men"]
pnad2008[v0302==4, v0302 := "Women"]
table(pnad2008$v0302)
# Recode Education variable
pnad2008[, v4745 := as.character(v4745)]
pnad2008[v4745==1, v4745 := "Uneducated"]
pnad2008[v4745==2, v4745 := "Incomplete primary school"]
pnad2008[v4745==3, v4745 := "Complete primary school"]
pnad2008[v4745==4, v4745 := "Incomplete high school"]
pnad2008[v4745==5, v4745 := "Complete high school"]
pnad2008[v4745==6, v4745 := "Incomplete university degree"]
pnad2008[v4745==7, v4745 := "University degree"]
pnad2008[v4745==8, v4745 := NA]
table(pnad2008$v4745)
# Recode State variable, make it compatible with PNAD
pnad2008[uf==11, UF :="Rondonia"]
pnad2008[uf==12, UF :="Acre"]
pnad2008[uf==13, UF :="Amazonas"]
pnad2008[uf==14, UF :="Roraima"]
pnad2008[uf==15, UF :="Para"]
pnad2008[uf==16, UF :="Amapa"]
pnad2008[uf==17, UF :="Tocantins"]
pnad2008[uf==21, UF :="Maranhao"]
pnad2008[uf==22, UF :="Piaui"]
pnad2008[uf==23, UF :="Ceara"]
pnad2008[uf==24, UF :="Rio Grande do Norte"]
pnad2008[uf==25, UF :="Paraiba"]
pnad2008[uf==26, UF :="Pernambuco"]
pnad2008[uf==27, UF :="Alagoas"]
pnad2008[uf==28, UF :="Sergipe"]
pnad2008[uf==29, UF :="Bahia"]
pnad2008[uf==31, UF :="Minas Gerais"]
pnad2008[uf==32, UF :="Espirito Santo"]
pnad2008[uf==33, UF :="Rio de Janeiro"]
pnad2008[uf==35, UF :="Sao Paulo"]
pnad2008[uf==41, UF :="Parana"]
pnad2008[uf==42, UF :="Santa Catarina"]
pnad2008[uf==43, UF :="Rio Grande do Sul"]
pnad2008[uf==50, UF :="Mato Grosso do Sul"]
pnad2008[uf==51, UF :="Mato Grosso"]
pnad2008[uf==52, UF :="Goias"]
pnad2008[uf==53, UF :="Federal District"]
table(pnad2008$UF)
summary(pnad2008$v4721)
pnad2008 <- pnad2008[ v4721 < 999999999999, ] #elimina observacoes missing na var.  de renda Dom per capita.
pnad2008 <- pnad2008[ v4721 >= 0, ] #elimina observacoes NA
summary(pnad2008$v4721)
# Create  var. income deciles of Monthly household income per capitade
pnad2008[, decileBR:= as.numeric( cut(v4721, breaks=quantile(v4721,
probs=seq(0, 1, by=0.1), na.rm=T),
include.lowest= TRUE, labels=1:10))]
# Checking Table
table(pnad2008$decileBR) #Numero de casos dentro de cada Decil tem que ser igual/proximo
# Create  var. income quintile of Monthly household income per capitade
pnad2008[, quintileBR:= as.numeric( cut(v4721, breaks=quantile(v4721,
probs=seq(0, 1, by=0.2), na.rm=T),
include.lowest= TRUE, labels=1:5))]
# function to Create Quintile for different regions
funQuintReg <- function(x){quintileRegion <- as.numeric(cut(x[, v4721], labels=c(1:5),
breaks=quantile(x[, v4721], seq(0,1, 0.2), na.rm=T),
include.lowest = TRUE))
cbind(x, quintileRegion)
}
# function to Create Quartile for different regions
funQuartReg <- function(x){quartileRegion <- as.numeric(cut(x[, v4721], labels=c(1:4),
breaks=quantile(x[, v4721], seq(0,1, 0.25), na.rm=T),
include.lowest = TRUE))
cbind(x, quartileRegion)
}
# function to Create Quintile for different Metro Areas
funQuintMetro <- function(x){quintileMetro <- as.numeric(cut(x[, v4721], labels=c(1:5),
breaks=quantile(x[, v4721], seq(0,1, 0.2), na.rm=T),
include.lowest = TRUE))
cbind(x, quintileMetro)
}
# function to Create Quartile for different Metro Areas
funQuartMetro <- function(x){quartileMetro <- as.numeric(cut(x[, v4721], labels=c(1:4),
breaks=quantile(x[, v4721], seq(0,1, 0.25), na.rm=T),
include.lowest = TRUE))
cbind(x, quartileMetro)
}
pnad2008 <- do.call(rbind, lapply(split(pnad2008, pnad2008[, region]), funQuintReg)) ; gc(reset = T)
pnad2008 <- do.call(rbind, lapply(split(pnad2008, pnad2008[, region]), funQuartReg)) ; gc(reset = T)
pnad2008 <- do.call(rbind, lapply(split(pnad2008, pnad2008[, metro]), funQuintMetro)) ; gc(reset = T)
pnad2008 <- do.call(rbind, lapply(split(pnad2008, pnad2008[, metro]), funQuartMetro)) ; gc(reset = T)
# Impute commute time '0' no active commute IF person works from home
pnad2008[v9057 == 0, v9057 :=NA]
pnad2008[, v9057mod := ifelse(v9054==3 , NA, v9057)]
table(pnad2008$v9057mod)
table(pnad2008$v9057)
# Impute no active commute IF person works from home, or has a job but did not answered the question of active tralvel (probably due to health issues)
pnad2008[v1410 == 0, v1410 :=NA]
pnad2008[, v1410mod := ifelse(v9054==3, 4, v1410)]
table(pnad2008$v1410)
table(pnad2008$v1410mod)
#  Impute active commute time '0' IF person works from home
pnad2008[v1411 == 0, v1411 :=NA]
pnad2008[, v1411mod := ifelse(v9054==3, NA, v1411)]
table(pnad2008$v1411)
table(pnad2008$v1411mod)
# create indicator variable of ind. that practice active travel for > 30minutes when commuting to work
pnad2008[, actv_commutetime30 := ifelse(v1410==2 & v1411 >3, 1, 0)]
table(pnad2008$actv_commutetime30)
# now create the pre-stratified weight to be used in all of the survey designs
pnad2008[, pre_wgt  := v4619 * v4610]
summary(pnad2008$pre_wgt)
#Recode Active Travel variable P040 into string
pnad2008[, v1410 := as.character(v1410)]
pnad2008[v1410==2, v1410 :="Yes"]
pnad2008[v1410==4, v1410 :="No"]
table(pnad2008$v1410)
pnad2008[, pre_wgt  := v4619 * v4610]
class(pnad2008$v4619)
class(pnad2008$v4610)
head(pnad2008$v4610)
# vehicle ownership variable, make it compatible with PNAD
pnad2008[, v2032 := as.character(v2032)]
pnad2008[v2032==2, v2032 := "Car"]
pnad2008[v2032==4, v2032 := "Motorcycle"]
pnad2008[v2032==6, v2032 := "Car + Motorcycle"]
pnad2008[v2032==8, v2032 := "None"]
table(pnad2008$v2032)
load("./data/PNAD2008/dicPNAD2008.RData")
setDT(dicpes2008)
setDT(dicdom2008)
# Indicate which columns will be read
# indiViduals data
mycolsPES <- c( "V0101", # year
"UF",    # State
"V0102", # Numero de controle
"V0103", # Numero de serie
"V0403", # Family number
"V4729", # Person Weight
"V4732", # Family Weight
"V8005", # age
"V0302", # Sex
"V0404", # race
"V4803", # Years of schooling
"V4745", # Educational attainment
"V4727", # Metropolitan area
"V9005", # Number of jobs
"V4805", # Employment Status
"V4706", # Job position
"V4810", # Job sectos
"V4721", # Household Income per Capita
"v4721", # Family Income per Capita
"V9054", # Work location
"V9055", # Work at home
"V9056", # Directo commute from home to work
"V9057", # Commute time
"V1409", # walking difficulties due to health condition
"V14091",# shoping difficulties due to health condition
"V1410", # ActiVe commute
"V1411", # ActiVe commute time
"V2801") # Smoker
# household data
mycolsDOM <- c("V0101", # year
"UF",    # State
"V0102", # NÃƒÂºmero de controle
"V0103", # NÃƒÂºmero de serie
"V0403", # Family number
"V4729", # Person Weight
"V4732", # Family Weight
"V4105", # Urban Vs Rural
"V2032", # Car or motorcycle ownership
"V4602", # Strata
"V4617", # STRAT
"V4609", # Population Projection
"UPA",   # DelimitaÃƒÂ§ÃƒÂ£o do municÃƒ­pio
"V4618", # PSU - Unidade primÃƒÂ¡ria de amostragem
"V4619", # Fator de subamostragem
"V4610", # InVerso da fraÃƒÂ§ÃƒÂ£o
"V4611", # Household weight
"V0233", # Household registered in 'saude da familia' program
"V0234") # time since registration
# Filter selected Variables
dicpes2008 <- dicpes2008[cod %in% mycolsPES, ]
dicdom2008 <- dicdom2008[cod %in% mycolsDOM, ]
dicpes2008
new.packages <- !('microdadosBrasil' %in% installed.packages()[,"Package"])
if(length(new.packages)) devtools::install_github("lucasmation/microdadosBrasil", ref = "subset-variables")
library(microdadosBrasil)
rm(list=ls())
gc(reset=T )
??download_sourceData
?download_sourceData
??download_sourceData
?download_sourceData
??download_sourceData
setwd("R:/Dropbox/github/active_travel_brazil/data")
download_sourceData("PNAD", 2008, unzip = T)
setwd("R:/Dropbox/github/active_travel_brazil")
